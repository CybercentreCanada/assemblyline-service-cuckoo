# This is a list of custom option to set in cuckoo config

###
# cuckoo.conf options
###
cuckoo.cuckoo.version_check=no
cuckoo.cuckoo.delete_original=yes
cuckoo.cuckoo.delete_bin_copy=yes
cuckoo.cuckoo.machinery=kvm
cuckoo.cuckoo.max_machines_count=1
cuckoo.resultserver.ip=0.0.0.0
cuckoo.processing.resolve_dns=no
cuckoo.processing.sort_pcap=no

# process_results - Cuckoo Docs
# Enable processing of results within the main cuckoo process.
# This is the default behavior but can be switched off for setups that
# require high stability and process the results in a separate task.
#  
# Having this on (which is the default) was causing a bug where the AL cuckoo 
# service would error with: "Service has been stopped while waiting for cuckoo to analyze file"
# The root cause of the problem is that the report json being generated by the cuckoo server
# was getting mixed up. Some kind of concurrency issue in cuckoo causes
# one section of the report to be written in other sections causing the report
# to contain malformed json. The json parse in cuckoo_query_report() will fail 
# and cause it to continually retry querying for the report until the service timeout hits.
# This issue led to this fix: https://github.com/cuckoosandbox/cuckoo/issues/1901
cuckoo.cuckoo.process_results=off


# Enabled memory dump processing with volatility
# This is only meaningful if a memory dump is requested on the submission
processing.memory.enabled=yes


# Diffs with previous static processing.conf. Might want to experiment with them to see what they do?
# Not sure exactly what this controls, but it wasn't set at all
processing.extracted.enabled=yes

# This was specifically disabled
processing.screenshots.enabled=no

# This was specifically disabled, looks like it provides
# some extra metadata about the file. There's a warning in the config about large PDFs causing it to die
# AL should extract all this data in other services
processing.static.enabled=no

# This should be done via other services as well
processing.strings.enabled=no

# targetinfo appears to be just generic file info - hashes, etc
processing.targetinfo.enabled=no

# process memory extraction
processing.procmemory.enabled=yes
processing.procmemory.idapro=yes
processing.procmemory.extract_img=yes
